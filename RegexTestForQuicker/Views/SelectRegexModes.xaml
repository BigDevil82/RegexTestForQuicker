<Window
    x:Class="RegexTestForQuicker.Views.SelectRegexModes"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:hc="https://handyorg.github.io/handycontrol"
    xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
    xmlns:local="clr-namespace:RegexTestForQuicker.Views"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    Title="SelectRegexModes"
    AllowsTransparency="True"
    Background="Transparent"
    ResizeMode="NoResize"
    ShowInTaskbar="False"
    SizeToContent="WidthAndHeight"
    WindowStyle="None"
    mc:Ignorable="d">
    <Window.Resources>
        <Style x:Key="ListBoxStyle1" TargetType="{x:Type ListBox}">
            <Setter Property="Background" Value="Orange" />
            <Setter Property="FocusVisualStyle" Value="{x:Null}" />
            <Setter Property="BorderBrush" Value="Green" />
            <Setter Property="BorderThickness" Value="1" />
            <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Disabled" />
            <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto" />
            <Setter Property="ScrollViewer.CanContentScroll" Value="True" />
            <Setter Property="ScrollViewer.PanningMode" Value="Both" />
            <Setter Property="Stylus.IsFlicksEnabled" Value="False" />
            <Setter Property="VerticalContentAlignment" Value="Center" />
            <Setter Property="ItemContainerStyle">
                <Setter.Value>
                    <Style TargetType="{x:Type ListBoxItem}">
                        <Setter Property="FocusVisualStyle">
                            <Setter.Value>
                                <Style>
                                    <Setter Property="Control.Template">
                                        <Setter.Value>
                                            <ControlTemplate>
                                                <Rectangle
                                                    Opacity="0.6"
                                                    SnapsToDevicePixels="True"
                                                    Stroke="Orange"
                                                    StrokeDashArray="1 1"
                                                    StrokeThickness="2" />
                                            </ControlTemplate>
                                        </Setter.Value>
                                    </Setter>
                                </Style>
                            </Setter.Value>
                        </Setter>
                        <Setter Property="SnapsToDevicePixels" Value="True" />
                        <Setter Property="Padding" Value="10,0" />
                        <Setter Property="MinHeight" Value="30" />
                        <Setter Property="HorizontalContentAlignment" Value="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type ItemsControl}}}" />
                        <Setter Property="VerticalContentAlignment" Value="Center" />
                        <Setter Property="Background" Value="Gray" />
                        <Setter Property="BorderBrush" Value="Transparent" />
                        <Setter Property="BorderThickness" Value="0" />
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="{x:Type ListBoxItem}">
                                    <Border
                                        x:Name="Bd"
                                        Padding="{TemplateBinding Padding}"
                                        Background="{TemplateBinding Background}"
                                        BorderBrush="{TemplateBinding BorderBrush}"
                                        BorderThickness="{TemplateBinding BorderThickness}"
                                        CornerRadius="{Binding (hc:BorderElement.CornerRadius), RelativeSource={RelativeSource TemplatedParent}}"
                                        SnapsToDevicePixels="True">
                                        <ContentPresenter
                                            HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                            VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                            Content="{TemplateBinding Content}"
                                            ContentStringFormat="{TemplateBinding ContentStringFormat}"
                                            ContentTemplate="{TemplateBinding ContentTemplate}"
                                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                                    </Border>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                        <Style.BasedOn>
                            <Style TargetType="{x:Type Control}">
                                <Setter Property="Foreground" Value="{DynamicResource PrimaryTextBrush}" />
                                <Setter Property="FontSize" Value="12" />
                                <Setter Property="FocusVisualStyle">
                                    <Setter.Value>
                                        <Style>
                                            <Setter Property="Control.Template">
                                                <Setter.Value>
                                                    <ControlTemplate>
                                                        <Rectangle RadiusX="4" RadiusY="4">
                                                            <Rectangle.Style>
                                                                <Style TargetType="{x:Type Rectangle}">
                                                                    <Setter Property="Margin" Value="-2" />
                                                                    <Setter Property="Opacity" Value="0.6" />
                                                                    <Setter Property="SnapsToDevicePixels" Value="True" />
                                                                    <Setter Property="Stroke" Value="{DynamicResource SecondaryBorderBrush}" />
                                                                    <Setter Property="StrokeThickness" Value="2" />
                                                                    <Setter Property="StrokeDashArray" Value="1 1" />
                                                                </Style>
                                                            </Rectangle.Style>
                                                        </Rectangle>
                                                    </ControlTemplate>
                                                </Setter.Value>
                                            </Setter>
                                        </Style>
                                    </Setter.Value>
                                </Setter>
                            </Style>
                        </Style.BasedOn>
                        <Style.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Background" Value="Red" />
                            </Trigger>
                            <Trigger Property="IsSelected" Value="True">
                                <Setter Property="Background" Value="Orange" />
                                <Setter Property="Foreground" Value="{DynamicResource TextIconBrush}" />
                            </Trigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="IsSelected" Value="True" />
                                    <Condition Property="Selector.IsSelectionActive" Value="False" />
                                </MultiTrigger.Conditions>
                                <Setter Property="Background" Value="Orange" />
                                <Setter Property="Foreground" Value="{DynamicResource PrimaryTextBrush}" />
                            </MultiTrigger>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter Property="Opacity" Value="0.4" />
                            </Trigger>
                            <Trigger Property="hc:EdgeElement.ShowEdgeContent" Value="True">
                                <Setter Property="Template">
                                    <Setter.Value>
                                        <ControlTemplate TargetType="{x:Type ListBoxItem}">
                                            <Border
                                                x:Name="Bd"
                                                Padding="{TemplateBinding Padding}"
                                                Background="{TemplateBinding Background}"
                                                BorderBrush="{TemplateBinding BorderBrush}"
                                                BorderThickness="{TemplateBinding BorderThickness}"
                                                SnapsToDevicePixels="True">
                                                <StackPanel Orientation="Horizontal">
                                                    <ContentControl
                                                        Width="16"
                                                        Height="16"
                                                        Content="{Binding (hc:EdgeElement.LeftContent), RelativeSource={RelativeSource TemplatedParent}}" />
                                                    <ContentPresenter
                                                        Margin="6,0,0,0"
                                                        HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                        VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                                        Content="{TemplateBinding Content}"
                                                        ContentStringFormat="{TemplateBinding ContentStringFormat}"
                                                        ContentTemplate="{TemplateBinding ContentTemplate}"
                                                        SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                                                </StackPanel>
                                            </Border>
                                        </ControlTemplate>
                                    </Setter.Value>
                                </Setter>
                            </Trigger>
                        </Style.Triggers>
                    </Style>
                </Setter.Value>
            </Setter>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ListBox}">
                        <Border
                            x:Name="Bd"
                            Background="Orange"
                            BorderBrush="Red"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            SnapsToDevicePixels="True">
                            <hc:ToggleBlock
                                HorizontalContentAlignment="Stretch"
                                VerticalContentAlignment="Stretch"
                                IsChecked="{Binding HasItems, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}">
                                <hc:ToggleBlock.CheckedContent>
                                    <hc:ScrollViewer Focusable="False">
                                        <ItemsPresenter Margin="{TemplateBinding Padding}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                                    </hc:ScrollViewer>
                                </hc:ToggleBlock.CheckedContent>
                                <hc:ToggleBlock.UnCheckedContent>
                                    <hc:Empty />
                                </hc:ToggleBlock.UnCheckedContent>
                            </hc:ToggleBlock>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="ListBoxStyle2" TargetType="{x:Type ListBox}">
            <Setter Property="Background" Value="{DynamicResource RegionBrush}" />
            <Setter Property="FocusVisualStyle" Value="{x:Null}" />
            <Setter Property="BorderBrush" Value="{DynamicResource BorderBrush}" />
            <Setter Property="BorderThickness" Value="1" />
            <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Disabled" />
            <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto" />
            <Setter Property="ScrollViewer.CanContentScroll" Value="True" />
            <Setter Property="ScrollViewer.PanningMode" Value="Both" />
            <Setter Property="Stylus.IsFlicksEnabled" Value="False" />
            <Setter Property="VerticalContentAlignment" Value="Center" />
            <Setter Property="ItemContainerStyle">
                <Setter.Value>
                    <Style TargetType="{x:Type ListBoxItem}">
                        <Setter Property="IsSelected" Value="{Binding IsSelected}"/>
                        <Setter Property="FocusVisualStyle">
                            <Setter.Value>
                                <Style>
                                    <Setter Property="Control.Template">
                                        <Setter.Value>
                                            <ControlTemplate>
                                                <Rectangle
                                                    Opacity="0.6"
                                                    SnapsToDevicePixels="True"
                                                    Stroke="{DynamicResource SecondaryBorderBrush}"
                                                    StrokeDashArray="1 1"
                                                    StrokeThickness="2" />
                                            </ControlTemplate>
                                        </Setter.Value>
                                    </Setter>
                                </Style>
                            </Setter.Value>
                        </Setter>
                        <Setter Property="SnapsToDevicePixels" Value="True" />
                        <Setter Property="Padding" Value="10,0" />
                        <Setter Property="MinHeight" Value="30" />
                        <Setter Property="HorizontalContentAlignment" Value="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type ItemsControl}}}" />
                        <Setter Property="VerticalContentAlignment" Value="Center" />
                        <Setter Property="Background" Value="{DynamicResource RegionBrush}" />
                        <Setter Property="BorderBrush" Value="Transparent" />
                        <Setter Property="BorderThickness" Value="0" />
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="{x:Type ListBoxItem}">
                                    <Border
                                        x:Name="Bd"
                                        Padding="{TemplateBinding Padding}"
                                        Background="{TemplateBinding Background}"
                                        BorderBrush="{TemplateBinding BorderBrush}"
                                        BorderThickness="{TemplateBinding BorderThickness}"
                                        CornerRadius="{Binding (hc:BorderElement.CornerRadius), RelativeSource={RelativeSource TemplatedParent}}"
                                        SnapsToDevicePixels="True">
                                        <ContentPresenter
                                            HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                            VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                            Content="{TemplateBinding Content}"
                                            ContentStringFormat="{TemplateBinding ContentStringFormat}"
                                            ContentTemplate="{TemplateBinding ContentTemplate}"
                                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                                    </Border>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                        <Style.BasedOn>
                            <Style TargetType="{x:Type Control}">
                                <Setter Property="Foreground" Value="{DynamicResource PrimaryTextBrush}" />
                                <Setter Property="FontSize" Value="12" />
                                <Setter Property="FocusVisualStyle">
                                    <Setter.Value>
                                        <Style>
                                            <Setter Property="Control.Template">
                                                <Setter.Value>
                                                    <ControlTemplate>
                                                        <Rectangle RadiusX="4" RadiusY="4">
                                                            <Rectangle.Style>
                                                                <Style TargetType="{x:Type Rectangle}">
                                                                    <Setter Property="Margin" Value="-2" />
                                                                    <Setter Property="Opacity" Value="0.6" />
                                                                    <Setter Property="SnapsToDevicePixels" Value="True" />
                                                                    <Setter Property="Stroke" Value="{DynamicResource SecondaryBorderBrush}" />
                                                                    <Setter Property="StrokeThickness" Value="2" />
                                                                    <Setter Property="StrokeDashArray" Value="1 1" />
                                                                </Style>
                                                            </Rectangle.Style>
                                                        </Rectangle>
                                                    </ControlTemplate>
                                                </Setter.Value>
                                            </Setter>
                                        </Style>
                                    </Setter.Value>
                                </Setter>
                            </Style>
                        </Style.BasedOn>
                        <Style.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Background" Value="Silver" />
                            </Trigger>
                            <Trigger Property="IsSelected" Value="True">
                                <Setter Property="Background" Value="#FFF7F7F7" />
                                <Setter Property="Foreground" Value="Black" />
                            </Trigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="IsSelected" Value="True" />
                                    <Condition Property="Selector.IsSelectionActive" Value="False" />
                                </MultiTrigger.Conditions>
                                <Setter Property="Background" Value="#FFF7F7F7" />
                                <Setter Property="Foreground" Value="Black" />
                            </MultiTrigger>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter Property="Opacity" Value="0.4" />
                            </Trigger>
                            <Trigger Property="hc:EdgeElement.ShowEdgeContent" Value="True">
                                <Setter Property="Template">
                                    <Setter.Value>
                                        <ControlTemplate TargetType="{x:Type ListBoxItem}">
                                            <Border
                                                x:Name="Bd"
                                                Padding="{TemplateBinding Padding}"
                                                Background="{TemplateBinding Background}"
                                                BorderBrush="{TemplateBinding BorderBrush}"
                                                BorderThickness="{TemplateBinding BorderThickness}"
                                                SnapsToDevicePixels="True">
                                                <StackPanel Orientation="Horizontal">
                                                    <ContentControl
                                                        Width="16"
                                                        Height="16"
                                                        Content="{Binding (hc:EdgeElement.LeftContent), RelativeSource={RelativeSource TemplatedParent}}" />
                                                    <ContentPresenter
                                                        Margin="6,0,0,0"
                                                        HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                        VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                                        Content="{TemplateBinding Content}"
                                                        ContentStringFormat="{TemplateBinding ContentStringFormat}"
                                                        ContentTemplate="{TemplateBinding ContentTemplate}"
                                                        SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                                                </StackPanel>
                                            </Border>
                                        </ControlTemplate>
                                    </Setter.Value>
                                </Setter>
                            </Trigger>
                        </Style.Triggers>
                    </Style>
                </Setter.Value>
            </Setter>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ListBox}">
                        <Border
                            x:Name="Bd"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            SnapsToDevicePixels="True">
                            <hc:ToggleBlock
                                HorizontalContentAlignment="Stretch"
                                VerticalContentAlignment="Stretch"
                                IsChecked="{Binding HasItems, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}">
                                <hc:ToggleBlock.CheckedContent>
                                    <hc:ScrollViewer Focusable="False">
                                        <ItemsPresenter Margin="{TemplateBinding Padding}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                                    </hc:ScrollViewer>
                                </hc:ToggleBlock.CheckedContent>
                                <hc:ToggleBlock.UnCheckedContent>
                                    <hc:Empty />
                                </hc:ToggleBlock.UnCheckedContent>
                            </hc:ToggleBlock>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <SolidColorBrush x:Key="ListBox.Static.Background" Color="#FFFFFFFF" />
        <SolidColorBrush x:Key="ListBox.Static.Border" Color="#FFABADB3" />
        <SolidColorBrush x:Key="ListBox.Disabled.Background" Color="#FFFFFFFF" />
        <SolidColorBrush x:Key="ListBox.Disabled.Border" Color="#FFD9D9D9" />
        <Style x:Key="ListBoxStyle3" TargetType="{x:Type ListBox}">
            <Setter Property="Background" Value="{StaticResource ListBox.Static.Background}" />
            <Setter Property="BorderBrush" Value="{StaticResource ListBox.Static.Border}" />
            <Setter Property="BorderThickness" Value="1" />
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" />
            <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto" />
            <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto" />
            <Setter Property="ScrollViewer.CanContentScroll" Value="true" />
            <Setter Property="ScrollViewer.PanningMode" Value="Both" />
            <Setter Property="Stylus.IsFlicksEnabled" Value="False" />
            <Setter Property="VerticalContentAlignment" Value="Center" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ListBox}">
                        <Border
                            x:Name="Bd"
                            Padding="1"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            SnapsToDevicePixels="true">
                            <ScrollViewer Padding="{TemplateBinding Padding}" Focusable="false">
                                <ItemsPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                            </ScrollViewer>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter TargetName="Bd" Property="Background" Value="Black" />
                                <Setter TargetName="Bd" Property="BorderBrush" Value="{StaticResource ListBox.Disabled.Border}" />
                            </Trigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="IsGrouping" Value="true" />
                                    <Condition Property="VirtualizingPanel.IsVirtualizingWhenGrouping" Value="false" />
                                </MultiTrigger.Conditions>
                                <Setter Property="ScrollViewer.CanContentScroll" Value="false" />
                            </MultiTrigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </Window.Resources>


    <Border
        Background="#FFF7F7F7"
        BorderThickness="2"
        CornerRadius="10">
        <StackPanel>
            <TextBlock
                Margin="15,20,20,2"
                FontSize="14"
                Foreground="#FF0579AD"
                Style="{StaticResource caption}"
                Text="正则匹配模式" />

            <Separator />

            <ListBox
                x:Name="RegexListBox"
                Margin="0,0,0,10"
                Background="#FFF7F7F7"
                BorderThickness="0"
                SelectionMode="Multiple"
                Style="{DynamicResource ListBoxStyle2}">
                <ListBox.ItemTemplate>
                    <DataTemplate>
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="200" />
                                <ColumnDefinition Width="30" />
                            </Grid.ColumnDefinitions>
                            <StackPanel>
                                <TextBlock Margin="15,5,20,2" Text="{Binding Mark}" />
                                <TextBlock
                                    Margin="15,2,20,5"
                                    Text="{Binding Descriptions}"
                                    TextWrapping="Wrap" />
                            </StackPanel>

                            <TextBlock
                                x:Name="flag"
                                Grid.Column="1"
                                Margin="0,5,10,2"
                                HorizontalAlignment="Right"
                                FontFamily="/Fonts/#iconfont"
                                Text="&#xE603;">
                                <TextBlock.Resources>
                                    <Style TargetType="{x:Type TextBlock}">
                                        <Setter Property="Visibility" Value="Hidden" />
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding IsMouseOver, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type ListBoxItem}}}" Value="True">
                                                <Setter Property="Visibility" Value="Visible" />
                                            </DataTrigger>
                                            <DataTrigger Binding="{Binding IsSelected, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type ListBoxItem}}}" Value="True">
                                                <Setter Property="Visibility" Value="Visible" />
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </TextBlock.Resources>
                            </TextBlock>
                        </Grid>

                    </DataTemplate>
                </ListBox.ItemTemplate>
                <ListBox.ItemContainerStyle>
                    <Style TargetType="{x:Type ListBoxItem}">
                        <Setter Property="IsSelected" Value="{Binding IsSelected}" />
                        <Style.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Background" Value="#FFF7F7F7" />
                            </Trigger>
                        </Style.Triggers>

                    </Style>
                </ListBox.ItemContainerStyle>
                <i:Interaction.Triggers>
                    <i:EventTrigger EventName="SelectionChanged">
                        <i:InvokeCommandAction Command="{Binding ExecuteRegexMatch}" />
                    </i:EventTrigger>
                </i:Interaction.Triggers>
            </ListBox>

            <ListBox Style="{DynamicResource ListBoxStyle1}">
                <ListBoxItem Content="aaaaaaa" />
                <ListBoxItem Content="bbbbbbbbb" />
                <ListBoxItem Content="cccccccc" />

            </ListBox>

            <ListBox x:Name="listbox3" Style="{StaticResource ListBoxStyle2}">

                <ListBox.ItemTemplate>
                    <DataTemplate>
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="200" />
                                <ColumnDefinition Width="30" />
                            </Grid.ColumnDefinitions>
                            <StackPanel>
                                <TextBlock Margin="15,5,20,2" Text="{Binding Mark}" />
                                <TextBlock
                                    Margin="15,2,20,5"
                                    Text="{Binding Descriptions}"
                                    TextWrapping="Wrap" />
                            </StackPanel>

                            <TextBlock
                                x:Name="flag"
                                Grid.Column="1"
                                Margin="0,5,10,2"
                                HorizontalAlignment="Right"
                                FontFamily="/Fonts/#iconfont"
                                Text="&#xE603;">
                                <TextBlock.Resources>
                                    <Style TargetType="{x:Type TextBlock}">
                                        <Setter Property="Visibility" Value="Hidden" />
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding IsMouseOver, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type ListBoxItem}}}" Value="True">
                                                <Setter Property="Visibility" Value="Visible" />
                                            </DataTrigger>
                                            <DataTrigger Binding="{Binding IsSelected, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type ListBoxItem}}}" Value="True">
                                                <Setter Property="Visibility" Value="Visible" />
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </TextBlock.Resources>
                            </TextBlock>
                        </Grid>

                    </DataTemplate>
                </ListBox.ItemTemplate>
                <ListBox.ItemContainerStyle>
                    <Style TargetType="{x:Type ListBoxItem}">
                        <Setter Property="IsSelected" Value="{Binding IsSelected}"/>
                        <Style.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Background" Value="#FFF7F7F7" />
                            </Trigger>
                        </Style.Triggers>

                    </Style>
                </ListBox.ItemContainerStyle>
            </ListBox>
        </StackPanel>
    </Border>

</Window>
