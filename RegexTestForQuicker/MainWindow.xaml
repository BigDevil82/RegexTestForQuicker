<Window
    x:Class="RegexTestForQuicker.MainWindow"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:avalonEdit="http://icsharpcode.net/sharpdevelop/avalonedit"
    xmlns:converter="clr-namespace:RegexTestForQuicker.Converter"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:hc="https://handyorg.github.io/handycontrol"
    xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
    xmlns:local="clr-namespace:RegexTestForQuicker"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:models="clr-namespace:RegexTestForQuicker.Models"
    Title="RegexTest4C#"
    Width="600"
    Height="700"
    Background="AliceBlue"
    Icon="/Fonts/正则表达式 (2).png"
    mc:Ignorable="d">
    <Window.Resources>
        <converter:BoolInverter x:Key="boolInverter" />
        <converter:RegexOps2String x:Key="Regex2String" />
    </Window.Resources>

    <Border Margin="10">
        <Grid>
            <Grid.RowDefinitions>
                <RowDefinition Height="auto" />
                <RowDefinition />
            </Grid.RowDefinitions>

            <StackPanel Grid.Row="0">
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="2*" />
                        <ColumnDefinition Width="1*" />
                        <ColumnDefinition Width="1*" />
                        <ColumnDefinition Width="3*" />
                    </Grid.ColumnDefinitions>
                    <!--  输入正则表达式  -->
                    <TextBlock
                        Grid.Column="0"
                        Style="{StaticResource caption}"
                        Text="正则表达式" />

                    <!--<TextBlock
                        Grid.Column="2"
                        HorizontalAlignment="Right"
                        Style="{StaticResource caption}"
                        Text="模式" />

                    <hc:CheckComboBox
                        Name="combobox"
                        Grid.Column="3"
                        Margin="5"
                        Padding="2"
                        HorizontalContentAlignment="Center"
                        FontSize="10"
                        ItemsSource="{Binding RegexOptions}"
                        SelectionChanged="SomeModeSelcted" />-->

                </Grid>

                <Grid>
                    <TextBox
                        x:Name="pattern"
                        Height="30"
                        Padding="5"
                        FontFamily="Consolas"
                        FontSize="16"
                        Text="{Binding Path=Pattern, UpdateSourceTrigger=PropertyChanged}">
                        <i:Interaction.Triggers>
                            <i:EventTrigger EventName="TextChanged">
                                <i:InvokeCommandAction Command="{Binding ExecuteRegexMatch}" />
                            </i:EventTrigger>
                        </i:Interaction.Triggers>
                    </TextBox>
                    <StackPanel
                        Margin="0,0,2,0"
                        HorizontalAlignment="Right"
                        Orientation="Horizontal">
                        <TextBlock
                            VerticalAlignment="Center"
                            FontFamily="TimesNewRoman"
                            Text="{Binding UpdateSourceTrigger=PropertyChanged, ElementName=RegexListBox, Path=SelectedItems, Converter={StaticResource Regex2String}}" />

                        <ToggleButton
                            x:Name="tb"
                            Height="25"
                            BorderBrush="Transparent"
                            IsHitTestVisible="{Binding ElementName=Popup, Path=IsOpen, Mode=OneWay, Converter={StaticResource boolInverter}}">
                            <TextBlock
                                VerticalAlignment="Center"
                                Cursor="Hand"
                                FontFamily="/Fonts/#iconfont"
                                Foreground="#FF229CF1"
                                Text="&#xe603;"
                                ToolTip="设置正则匹配模式" />
                        </ToggleButton>
                        <Popup
                            x:Name="Popup"
                            AllowsTransparency="True"
                            HorizontalOffset="-80"
                            IsOpen="{Binding ElementName=tb, Path=IsChecked}"
                            Placement="Bottom"
                            PlacementTarget="{Binding ElementName=tb}"
                            StaysOpen="False"
                            VerticalOffset="-50">
                            <Border
                                Background="#FFF7F7F7"
                                BorderThickness="2"
                                CornerRadius="10">
                                <Border.Effect>
                                    <DropShadowEffect BlurRadius="5" Opacity="0.4" />
                                </Border.Effect>
                                <StackPanel>
                                    <TextBlock
                                        Margin="15,20,20,2"
                                        FontSize="14"
                                        Foreground="#FF0579AD"
                                        Style="{StaticResource caption}"
                                        Text="正则匹配模式" />

                                    <Separator />

                                    <ListBox
                                        x:Name="RegexListBox"
                                        Margin="0,0,0,10"
                                        Background="#FFF7F7F7"
                                        BorderThickness="0"
                                        ItemsSource="{Binding PopupItems}"
                                        SelectionMode="Multiple">
                                        <ListBox.ItemTemplate>
                                            <DataTemplate>
                                                <Grid>
                                                    <Grid.ColumnDefinitions>
                                                        <ColumnDefinition Width="160" />
                                                        <ColumnDefinition Width="30" />
                                                    </Grid.ColumnDefinitions>
                                                    <StackPanel>
                                                        <TextBlock Margin="15,5,20,2" Text="{Binding Mark}" />
                                                        <TextBlock
                                                            Margin="15,2,10,5"
                                                            Text="{Binding Descriptions}"
                                                            TextWrapping="Wrap" />
                                                    </StackPanel>

                                                    <TextBlock
                                                        x:Name="flag"
                                                        Grid.Column="1"
                                                        Margin="0,5,10,2"
                                                        HorizontalAlignment="Right"
                                                        FontFamily="/Fonts/#iconfont"
                                                        Text="&#xE603;">
                                                        <TextBlock.Resources>
                                                            <Style TargetType="TextBlock">
                                                                <Setter Property="Visibility" Value="Hidden" />
                                                                <Style.Triggers>
                                                                    <DataTrigger Binding="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ListBoxItem}, AncestorLevel=1}, Path=IsMouseOver}" Value="True">
                                                                        <Setter Property="Visibility" Value="Visible" />
                                                                    </DataTrigger>
                                                                    <DataTrigger Binding="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ListBoxItem}, AncestorLevel=1}, Path=IsSelected}" Value="True">
                                                                        <Setter Property="Visibility" Value="Visible" />
                                                                    </DataTrigger>
                                                                </Style.Triggers>
                                                            </Style>
                                                        </TextBlock.Resources>
                                                    </TextBlock>
                                                </Grid>

                                            </DataTemplate>
                                        </ListBox.ItemTemplate>
                                        <ListBox.ItemContainerStyle>
                                            <Style TargetType="{x:Type ListBoxItem}">
                                                <Setter Property="IsSelected" Value="{Binding IsSelected, Mode=TwoWay}" />
                                                <Style.Triggers>
                                                    <Trigger Property="IsMouseOver" Value="True">
                                                        <Setter Property="Background" Value="#FFF7F7F7" />
                                                    </Trigger>
                                                </Style.Triggers>

                                            </Style>
                                        </ListBox.ItemContainerStyle>
                                        <i:Interaction.Triggers>
                                            <i:EventTrigger EventName="SelectionChanged">
                                                <i:InvokeCommandAction Command="{Binding ExecuteRegexMatch}" />
                                            </i:EventTrigger>
                                        </i:Interaction.Triggers>
                                    </ListBox>
                                </StackPanel>
                            </Border>
                        </Popup>


                    </StackPanel>
                </Grid>


                <!--  输入需要匹配的内容  -->
                <TextBlock Style="{StaticResource caption}" Text="待匹配内容" />
            </StackPanel>

            <!--  为了能够改变结果框高度需要再用grid布局  -->
            <Grid Grid.Row="1">

                <Grid.RowDefinitions>
                    <RowDefinition Height="5*" MinHeight="50" />
                    <RowDefinition Height="auto" />
                    <RowDefinition Height="4*" MinHeight="80" />
                </Grid.RowDefinitions>

                <!--  原始内容输入框  -->
                <!--<TextBox
                    x:Name="input"
                    Style="{StaticResource styledTextBox}"
                    Text="{Binding Input}"
                    VerticalScrollBarVisibility="Visible" />-->

                <avalonEdit:TextEditor
                    x:Name="input"
                    Padding="5"
                    FontFamily="Consolas"
                    FontSize="14pt"
                    WordWrap="True">

                    <avalonEdit:TextEditor.Resources>
                        <Style TargetType="{x:Type Border}">
                            <Setter Property="CornerRadius" Value="8" />
                            <Setter Property="BorderBrush" Value="#FF040A0E" />
                        </Style>
                    </avalonEdit:TextEditor.Resources>

                    <i:Interaction.Behaviors>
                        <models:AvalonEditBehaviour GiveMeTheText="{Binding Input, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                    </i:Interaction.Behaviors>

                    <i:Interaction.Triggers>
                        <i:EventTrigger EventName="TextChanged">
                            <i:InvokeCommandAction Command="{Binding ExecuteRegexMatch}" />
                        </i:EventTrigger>
                    </i:Interaction.Triggers>
                </avalonEdit:TextEditor>

                <!--<RichTextBox x:Name="rtb" >

                </RichTextBox>-->

                <GridSplitter Grid.Row="1" Background="AliceBlue" />

                <!--
                    这里用grid布局是为了让最后
                    一个textbox能自由占满剩余空间
                -->
                <Grid Grid.Row="2">
                    <Grid.RowDefinitions>
                        <RowDefinition
                            Height="1*"
                            MinHeight="30"
                            MaxHeight="30" />
                        <RowDefinition Height="4.5*" />
                    </Grid.RowDefinitions>

                    <Grid Grid.Row="0">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="auto" />
                            <ColumnDefinition Width="auto" />
                        </Grid.ColumnDefinitions>
                        <!--  展示匹配结果  -->
                        <TextBlock
                            Margin="0,0,20,0"
                            Style="{StaticResource caption}"
                            Text="匹配结果"
                            ToolTip="右键复制某条结果" />

                        <CheckBox
                            x:Name="showAllMatches"
                            Grid.Column="1"
                            HorizontalAlignment="Left"
                            Command="{Binding ExecuteRegexMatch}"
                            Content="显示所有匹配内容"
                            FontSize="15"
                            IsChecked="{Binding ShowAllMatches}"
                            Style="{StaticResource CheckBoxBaseStyle}" />

                    </Grid>
                    <!--  匹配结果文本框  -->
                    <!--<TextBox
                        x:Name="result"
                        Grid.Row="1"
                        Style="{StaticResource styledTextBox}"
                        Background="#FFD5F2FF" />-->
                    <!--<ListBox
                        Name="result"
                        Grid.Row="1"
                        HorizontalContentAlignment="Stretch" />-->

                    <ListBox
                        x:Name="result"
                        Grid.Row="1"
                        ItemsSource="{Binding Path=ResultList, UpdateSourceTrigger=PropertyChanged}"
                        ScrollViewer.HorizontalScrollBarVisibility="Disabled">

                        <ListBox.ItemTemplate>
                            <DataTemplate>
                                <Grid>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="Auto" />
                                        <ColumnDefinition Width="Auto" />
                                    </Grid.ColumnDefinitions>
                                    <TextBlock
                                        Grid.Column="0"
                                        Margin="0,0,12,0"
                                        Text="{Binding Index}" />
                                    <TextBlock
                                        Grid.Column="1"
                                        MouseRightButtonDown="CopyResult"
                                        Text="{Binding Value}"
                                        TextWrapping="Wrap" />
                                </Grid>
                            </DataTemplate>
                        </ListBox.ItemTemplate>
                        <ListBox.ItemContainerStyle>
                            <Style TargetType="ListBoxItem">
                                <Setter Property="FontSize" Value="15" />
                                <Setter Property="Height" Value="25" />
                                <Setter Property="Background" Value="#FFD5F2FF" />
                                <Style.Triggers>
                                    <Trigger Property="IsMouseOver" Value="True">
                                        <Setter Property="ToolTip" Value="右键复制结果" />
                                    </Trigger>
                                </Style.Triggers>
                            </Style>
                        </ListBox.ItemContainerStyle>
                    </ListBox>

                    <!--<TextBox Grid.Row="1" Text="{Binding Result}" />-->
                </Grid>
            </Grid>
        </Grid>





    </Border>

</Window>
